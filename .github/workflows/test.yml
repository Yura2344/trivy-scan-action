name: test
on: [workflow_dispatch]
jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
        repos: ${{ steps.get-repo-with-tags.outputs.repos }}
    steps:
      - name: Get tags
        id: get-repo-with-tags
        run: |
          # Make a GET request to Docker Hub API for Percona repositories
          response=$(curl -s "https://hub.docker.com/v2/repositories/percona/?page_size=100")

          # Extract the repository names from the response using jq
          repos=$(echo "$response" | jq -r '."results"[]["name"]')

          repo_with_tags=()

          # Iterate over each repository and retrieve the five latest tags
          for repo in $repos; do
              tags_array=()
              link="https://hub.docker.com/v2/repositories/percona/${repo}/tags/?page_size=100"
              while [ "$link" != "null" ]; do
                  tags_response=$(curl -s $link)
                  link=$(echo "$tags_response" | jq -r '.next')
                  tags=$(echo "$tags_response" | jq -r '."results"[]["name"]')
                  tags_array+=(${tags[@]})
              done
              tags_array=($(printf "%s\n" "${tags_array[@]}" | sort -V | tail -n 5))
              for tag in ${tags_array[@]}; do
                  repo_with_tags+=("$repo:$tag")
              done
          done
          jsonString=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${repo_with_tags[@]}")
          echo "::set-output name=repos::$jsonString"
  scan-repos:
    runs-on: ubuntu-latest
    needs: get-tags
    strategy:
      matrix:
        repos: ${{ fromJSON(needs.get-tags.outputs.repos) }}
    steps:
      - name: Print repos
        run: echo ${{ fromJSON(needs.get-tags.outputs.repos) }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'percona/${{ matrix.repos }}'
          format: 'sarif'
          output: '${{ matrix.repos }}-scan-result.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: '${{ matrix.repos }}-scan-result.sarif'
